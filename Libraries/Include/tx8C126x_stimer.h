/**
  ******************************************************************************
  * @file    stimer.h
  * @author  HUGE-IC Application Team
  * @version V1.0.0
  * @date    01-05-2021
  * @brief   This file contains all the STIMER LL firmware functions.
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  *
  *
  */ 
  
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __STIMER_H__
#define __STIMER_H__

#ifdef __cplusplus
 extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | STMR1/STMR3/STMR5群组功能使能  0x0:群组功能不使能  0x1:群组功能使能  |
|            |  6  | STMR0/STMR2/STMR4群组功能使能  0x0:群组功能不使能  0x1:群组功能使能  |
|            | 5:4 | STMR4/STMR5模式选择                                                  |
|            |     | 0x0:STMR4和STMR5为独立模式  0x1:STMR4和STMR5为同步模式               |
|            |     | 0x2:STMR4和STMR5为互补模式  0x3:保留                                 |
| STMR_CON0  | 3:2 | STMR2/STMR3模式选择                                                  |
|            |     | 0x0:STMR2和STMR3为独立模式  0x1:STMR2和STMR3为同步模式               |
|            |     | 0x2:STMR2和STMR3为互补模式  0x3:保留                                 |
|            | 1:0 | STMR0/STMR1模式选择                                                  |
|            |     | 0x0:STMR0和STMR1为独立模式  0x1:STMR0和STMR1为同步模式               |
|            |     | 0x2:STMR0和STMR1为互补模式  0x3:保留                                 |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_CON0
#define _STMR_CON0
#define STMR_GROUPS1_EN(n)          ((n) << 7)  // STMR1/STMR3/STMR5群组功能使能  0x0:群组功能不使能  0x1:群组功能使能
#define STMR_GROUPS0_EN(n)          ((n) << 6)  // STMR0/STMR2/STMR4群组功能使能  0x0:群组功能不使能  0x1:群组功能使能
#define STMR_45_SYSNCMP_SEL(n)      ((n) << 4)  // STMR4/STMR5模式选择
                                                // 0x0:STMR4和STMR5为独立模式  0x1:STMR4和STMR5为同步模式
                                                // 0x2:STMR4和STMR5为互补模式  0x3:保留
#define STMR_23_SYSNCMP_SEL(n)      ((n) << 2)  // STMR2/STMR3模式选择
                                                // 0x0:STMR2和STMR3为独立模式  0x1:STMR2和STMR3为同步模式
                                                // 0x2:STMR2和STMR3为互补模式  0x3:保留
#define STMR_01_SYSNCMP_SEL(n)      ((n) << 0)  // STMR0/STMR1模式选择
                                                // 0x0:STMR0和STMR1为独立模式  0x1:STMR0和STMR1为同步模式
                                                // 0x2:STMR0和STMR1为互补模式  0x3:保留

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | 自动装载点选择   0x0:计数至0时自动装载  0x1:计数至周期自动装载       |
|            |  6  | 比较值C点选择位  0x0:计数方向向上时,比较值C有效                      |
|            |     |                  0x1:计数方向向下时,比较值C有效                      |
|            |  5  | STMR5计数模式选择  0x0:单次计数模式  0x1:连续计数模式                |
|            |  4  | STMR4计数模式选择  0x0:单次计数模式  0x1:连续计数模式                |
| STMR_CNTMD |  3  | STMR3计数模式选择  0x0:单次计数模式  0x1:连续计数模式                |
|            |  2  | STMR2计数模式选择  0x0:单次计数模式  0x1:连续计数模式                |
|            |  1  | STMR1计数模式选择  0x0:单次计数模式  0x1:连续计数模式                |
|            |  0  | STMR0计数模式选择  0x0:单次计数模式  0x1:连续计数模式                |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_CNTMD
#define _STMR_CNTMD
#define STMR_LOAD_SEL(n)            ((n) << 7)  // 自动装载点选择   0x0:计数至0时自动装载  0x1:计数至周期自动装载
#define STMR_CMPC_SEL(n)            ((n) << 6)  // 比较值C点选择位  0x0:计数方向向上时,比较值C有效
                                                //                  0x1:计数方向向下时,比较值C有效
#define STMR_5_CNT_MODE(n)          ((n) << 5)  // STMR5计数模式选择  0x0:单次计数模式  0x1:连续计数模式
#define STMR_4_CNT_MODE(n)          ((n) << 4)  // STMR4计数模式选择  0x0:单次计数模式  0x1:连续计数模式
#define STMR_3_CNT_MODE(n)          ((n) << 3)  // STMR3计数模式选择  0x0:单次计数模式  0x1:连续计数模式
#define STMR_2_CNT_MODE(n)          ((n) << 2)  // STMR2计数模式选择  0x0:单次计数模式  0x1:连续计数模式
#define STMR_1_CNT_MODE(n)          ((n) << 1)  // STMR1计数模式选择  0x0:单次计数模式  0x1:连续计数模式
#define STMR_0_CNT_MODE(n)          ((n) << 0)  // STMR0计数模式选择  0x0:单次计数模式  0x1:连续计数模式

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | STMR5 计数清零  写1清零,写0无效                                      |
|            |  4  | STMR4 计数清零  写1清零,写0无效                                      |
|STMR_CNTCLR |  3  | STMR3 计数清零  写1清零,写0无效                                      |
|            |  2  | STMR2 计数清零  写1清零,写0无效                                      |
|            |  1  | STMR1 计数清零  写1清零,写0无效                                      |
|            |  0  | STMR0 计数清零  写1清零,写0无效                                      |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_CNTCLR
#define _STMR_CNTCLR
#define STMR_5_CNT_CLR(n)           ((n) << 5)  // STMR5 计数清零  写1清零,写0无效
#define STMR_4_CNT_CLR(n)           ((n) << 4)  // STMR4 计数清零  写1清零,写0无效
#define STMR_3_CNT_CLR(n)           ((n) << 3)  // STMR3 计数清零  写1清零,写0无效
#define STMR_2_CNT_CLR(n)           ((n) << 2)  // STMR2 计数清零  写1清零,写0无效
#define STMR_1_CNT_CLR(n)           ((n) << 1)  // STMR1 计数清零  写1清零,写0无效
#define STMR_0_CNT_CLR(n)           ((n) << 0)  // STMR0 计数清零  写1清零,写0无效

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | STMR_CNTEN[7]硬件置1使能                                             |
|            |     | 0x0:硬件置1无效  0x1:硬件置1使能,STMR0 CNT=0时,STMR_CNTEN[7]硬件置1  |
|            |  6  | STMR_CNTEN[6]硬件置1使能                                             |
|            |     | 0x0:硬件置1无效  0x1:硬件置1使能,STMR0 CNT=0时,STMR_CNTEN[6]硬件置1  |
|            |  5  | STMR5计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数                |
|            |  4  | STMR4计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数                |
|STMR_CNTTYPE|  3  | STMR3计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数                |
|            |  2  | STMR2计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数                |
|            |  1  | STMR1计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数                |
|            |  0  | STMR0计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数                |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_CNTTYPE
#define _STMR_CNTTYPE
#define STMR_TMR1_EN(n)             ((n) << 7)  // STMR_CNTEN[7]硬件置1使能                                           
                                                // 0x0:硬件置1无效  0x1:硬件置1使能,STMR0 CNT=0时,STMR_CNTEN[7]硬件置1
#define STMR_TMR0_EN(n)             ((n) << 6)  // STMR_CNTEN[6]硬件置1使能                                           
                                                // 0x0:硬件置1无效  0x1:硬件置1使能,STMR0 CNT=0时,STMR_CNTEN[6]硬件置1
#define STMR_5_CNT_TYPE(n)          ((n) << 5)  // STMR5计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数              
#define STMR_4_CNT_TYPE(n)          ((n) << 4)  // STMR4计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数              
#define STMR_3_CNT_TYPE(n)          ((n) << 3)  // STMR3计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数              
#define STMR_2_CNT_TYPE(n)          ((n) << 2)  // STMR2计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数              
#define STMR_1_CNT_TYPE(n)          ((n) << 1)  // STMR1计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数              
#define STMR_0_CNT_TYPE(n)          ((n) << 0)  // STMR0计数类型选择  0x0:边沿对齐计数  0x1:中心对齐计数              


/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | TMR1计数使能   0x0:计数不使能  0x1:计数使能                          |
|            |  6  | TMR0计数使能   0x0:计数不使能  0x1:计数使能                          |
|            |  5  | STMR5计数使能  0x0:计数不使能  0x1:计数使能                          |
|            |  4  | STMR4计数使能  0x0:计数不使能  0x1:计数使能                          |
| STMR_CNTEN |  3  | STMR3计数使能  0x0:计数不使能  0x1:计数使能                          |
|            |  2  | STMR2计数使能  0x0:计数不使能  0x1:计数使能                          |
|            |  1  | STMR1计数使能  0x0:计数不使能  0x1:计数使能                          |
|            |  0  | STMR0计数使能  0x0:计数不使能  0x1:计数使能                          |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_CNTEN
#define _STMR_CNTEN
#define STMR_TMR1_CNT_EN(n)         ((n) << 7)  // TMR1计数使能   0x0:计数不使能  0x1:计数使能
#define STMR_TMR0_CNT_EN(n)         ((n) << 6)  // TMR0计数使能   0x0:计数不使能  0x1:计数使能
#define STMR_5_CNT_EN(n)            ((n) << 5)  // STMR5计数使能  0x0:计数不使能  0x1:计数使能
#define STMR_4_CNT_EN(n)            ((n) << 4)  // STMR4计数使能  0x0:计数不使能  0x1:计数使能
#define STMR_3_CNT_EN(n)            ((n) << 3)  // STMR3计数使能  0x0:计数不使能  0x1:计数使能
#define STMR_2_CNT_EN(n)            ((n) << 2)  // STMR2计数使能  0x0:计数不使能  0x1:计数使能
#define STMR_1_CNT_EN(n)            ((n) << 1)  // STMR1计数使能  0x0:计数不使能  0x1:计数使能
#define STMR_0_CNT_EN(n)            ((n) << 0)  // STMR0计数使能  0x0:计数不使能  0x1:计数使能

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | STMR5自动装载使能  0x0:自动装载不使能  0x1:自动装载使能              |
|            |  4  | STMR4自动装载使能  0x0:自动装载不使能  0x1:自动装载使能              |
|STMR_LOADEN |  3  | STMR3自动装载使能  0x0:自动装载不使能  0x1:自动装载使能              |
|            |  2  | STMR2自动装载使能  0x0:自动装载不使能  0x1:自动装载使能              |
|            |  1  | STMR1自动装载使能  0x0:自动装载不使能  0x1:自动装载使能              |
|            |  0  | STMR0自动装载使能  0x0:自动装载不使能  0x1:自动装载使能              |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_LOADEN
#define _STMR_LOADEN
#define STMR_5_LOAD_EN(n)           ((n) << 5)  // STMR5自动装载使能  0x0:自动装载不使能  0x1:自动装载使能
#define STMR_4_LOAD_EN(n)           ((n) << 4)  // STMR4自动装载使能  0x0:自动装载不使能  0x1:自动装载使能
#define STMR_3_LOAD_EN(n)           ((n) << 3)  // STMR3自动装载使能  0x0:自动装载不使能  0x1:自动装载使能
#define STMR_2_LOAD_EN(n)           ((n) << 2)  // STMR2自动装载使能  0x0:自动装载不使能  0x1:自动装载使能
#define STMR_1_LOAD_EN(n)           ((n) << 1)  // STMR1自动装载使能  0x0:自动装载不使能  0x1:自动装载使能
#define STMR_0_LOAD_EN(n)           ((n) << 0)  // STMR0自动装载使能  0x0:自动装载不使能  0x1:自动装载使能

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
| STMR_CMPCL | 7:0 | 比较值C点低八位  Note:比较值C点只与STMR0的计数进行比较               |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_CMPCL
#define _STMR_CMPCL
#define STMR_CMPC_VAL_L(n)          ((n) << 0)  // 比较值C点低八位  Note:比较值C点只与STMR0的计数进行比较

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
| STMR_CMPCH | 7:0 | 比较值C点高八位  Note:比较值C点只与STMR0的计数进行比较               |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_CMPCH
#define _STMR_CMPCH
#define STMR_CMPC_VAL_H(n)          ((n) << 0)  // 比较值C点高八位  Note:比较值C点只与STMR0的计数进行比较

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | STMR5 PWM输出使能  0x0:不使能  0x1:使能                              |
|            |  4  | STMR4 PWM输出使能  0x0:不使能  0x1:使能                              |
| STMR_PWMEN |  3  | STMR3 PWM输出使能  0x0:不使能  0x1:使能                              |
|            |  2  | STMR2 PWM输出使能  0x0:不使能  0x1:使能                              |
|            |  1  | STMR1 PWM输出使能  0x0:不使能  0x1:使能                              |
|            |  0  | STMR0 PWM输出使能  0x0:不使能  0x1:使能                              |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_PWMEN
#define _STMR_PWMEN
#define STMR_5_PWM_EN(n)            ((n) << 5)  // STMR5 PWM输出使能  0x0:不使能  0x1:使能
#define STMR_4_PWM_EN(n)            ((n) << 4)  // STMR4 PWM输出使能  0x0:不使能  0x1:使能
#define STMR_3_PWM_EN(n)            ((n) << 3)  // STMR3 PWM输出使能  0x0:不使能  0x1:使能
#define STMR_2_PWM_EN(n)            ((n) << 2)  // STMR2 PWM输出使能  0x0:不使能  0x1:使能
#define STMR_1_PWM_EN(n)            ((n) << 1)  // STMR1 PWM输出使能  0x0:不使能  0x1:使能
#define STMR_0_PWM_EN(n)            ((n) << 0)  // STMR0 PWM输出使能  0x0:不使能  0x1:使能

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | STMR5 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于比较值A,PWM输出1,小于等于输出0       |
|            |  4  | STMR4 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0       |
|STMR_PWMVALA|  3  | STMR3 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0        |
|            |  2  | STMR2 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0        |
|            |  1  | STMR1 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0        |
|            |  0  | STMR0 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0        |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_PWMVALA
#define _STMR_PWMVALA
#define STMR_5_PWMVALA(n)            ((n) << 5)  // STMR5 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0 
#define STMR_4_PWMVALA(n)            ((n) << 4)  // STMR4 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0 
#define STMR_3_PWMVALA(n)            ((n) << 3)  // STMR3 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0 
#define STMR_2_PWMVALA(n)            ((n) << 2)  // STMR2 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0 
#define STMR_1_PWMVALA(n)            ((n) << 1)  // STMR1 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0 
#define STMR_0_PWMVALA(n)            ((n) << 0)  // STMR0 PWM输出值  0x0:计数CNT小于比较值A,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值A,PWM输出1,小于输出0 

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | STMR5 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0       |
|            |  4  | STMR4 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0        |
|STMR_PWMVALB|  3  | STMR3 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0       |
|            |  2  | STMR2 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0        |
|            |  1  | STMR1 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0        |
|            |  0  | STMR0 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0       |
|            |     |                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0        |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_PWMVALB
#define _STMR_PWMVALB
#define STMR_5_PWMVALB(n)            ((n) << 5)  // STMR5 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0
#define STMR_4_PWMVALB(n)            ((n) << 4)  // STMR4 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0
#define STMR_3_PWMVALB(n)            ((n) << 3)  // STMR3 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0
#define STMR_2_PWMVALB(n)            ((n) << 2)  // STMR2 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0
#define STMR_1_PWMVALB(n)            ((n) << 1)  // STMR1 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0
#define STMR_0_PWMVALB(n)            ((n) << 0)  // STMR0 PWM输出值  0x0:计数CNT小于比较值B,PWM输出1,大于等于输出0
                                                 //                  0x1:计数CNT大于等于比较值B,PWM输出1,小于输出0

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | STMR5 比较值B PWM输出使能  0x0:不使能  0x1:使能                      |
|            |  4  | STMR4 比较值B PWM输出使能  0x0:不使能  0x1:使能                      |
|STMR_PWMBEN |  3  | STMR3 比较值B PWM输出使能  0x0:不使能  0x1:使能                      |
|            |  2  | STMR2 比较值B PWM输出使能  0x0:不使能  0x1:使能                      |
|            |  1  | STMR1 比较值B PWM输出使能  0x0:不使能  0x1:使能                      |
|            |  0  | STMR0 比较值B PWM输出使能  0x0:不使能  0x1:使能                      |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_PWMBEN
#define _STMR_PWMBEN
#define STMR_5_PWMB_EN(n)            ((n) << 5)  // STMR5 比较值B PWM输出使能  0x0:不使能  0x1:使能
#define STMR_4_PWMB_EN(n)            ((n) << 4)  // STMR4 比较值B PWM输出使能  0x0:不使能  0x1:使能
#define STMR_3_PWMB_EN(n)            ((n) << 3)  // STMR3 比较值B PWM输出使能  0x0:不使能  0x1:使能
#define STMR_2_PWMB_EN(n)            ((n) << 2)  // STMR2 比较值B PWM输出使能  0x0:不使能  0x1:使能
#define STMR_1_PWMB_EN(n)            ((n) << 1)  // STMR1 比较值B PWM输出使能  0x0:不使能  0x1:使能
#define STMR_0_PWMB_EN(n)            ((n) << 0)  // STMR0 比较值B PWM输出使能  0x0:不使能  0x1:使能

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|             | Bit |                    Description                                      |
|             |---------------------------------------------------------------------------|
|             | 7:6 |                                                                     |
|             |  5  | STMR5 PWM掩码输出使能  0x0:不使能  0x1:使能                         |
|             |  4  | STMR4 PWM掩码输出使能  0x0:不使能  0x1:使能                         |
|STMR_PWMMSKEN|  3  | STMR3 PWM掩码输出使能  0x0:不使能  0x1:使能                         |
|             |  2  | STMR2 PWM掩码输出使能  0x0:不使能  0x1:使能                         |
|             |  1  | STMR1 PWM掩码输出使能  0x0:不使能  0x1:使能                         |
|             |  0  | STMR0 PWM掩码输出使能  0x0:不使能  0x1:使能                         |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_PWMMSKEN
#define _STMR_PWMMSKEN
#define STMR_5_PWM_MSK_EN(n)         ((n) << 5)  // STMR5 PWM掩码输出使能  0x0:不使能  0x1:使能
#define STMR_4_PWM_MSK_EN(n)         ((n) << 4)  // STMR4 PWM掩码输出使能  0x0:不使能  0x1:使能
#define STMR_3_PWM_MSK_EN(n)         ((n) << 3)  // STMR3 PWM掩码输出使能  0x0:不使能  0x1:使能
#define STMR_2_PWM_MSK_EN(n)         ((n) << 2)  // STMR2 PWM掩码输出使能  0x0:不使能  0x1:使能
#define STMR_1_PWM_MSK_EN(n)         ((n) << 1)  // STMR1 PWM掩码输出使能  0x0:不使能  0x1:使能
#define STMR_0_PWM_MSK_EN(n)         ((n) << 0)  // STMR0 PWM掩码输出使能  0x0:不使能  0x1:使能

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|             | Bit |                    Description                                      |
|             |---------------------------------------------------------------------------|
|             | 7:6 |                                                                     |
|             |  5  | STMR5 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1                   |
|             |  4  | STMR4 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1                   |
|STMR_PWMMSKD |  3  | STMR3 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1                   |
|             |  2  | STMR2 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1                   |
|             |  1  | STMR1 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1                   |
|             |  0  | STMR0 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1                   |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_PWMMSKD
#define _STMR_PWMMSKD
#define STMR_5_PWM_MSKD(n)         ((n) << 5)  // STMR5 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1
#define STMR_4_PWM_MSKD(n)         ((n) << 4)  // STMR4 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1
#define STMR_3_PWM_MSKD(n)         ((n) << 3)  // STMR3 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1
#define STMR_2_PWM_MSKD(n)         ((n) << 2)  // STMR2 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1
#define STMR_1_PWM_MSKD(n)         ((n) << 1)  // STMR1 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1
#define STMR_0_PWM_MSKD(n)         ((n) << 0)  // STMR0 PWM掩码输出值  0x0:掩码输出0  0x1:掩码输出1

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | FB端口刹车使能  0x0:不使能  0x1:使能                                 |
|            |  6  | 比较器刹车使能  0x0:不使能  0x1:使能                                 |
|            |  5  | STMR5刹车使能   0x0:不使能  0x1:使能                                 |
| STMR_BRKEN |  4  | STMR4刹车使能   0x0:不使能  0x1:使能                                 |
| 			 |  3  | STMR3刹车使能   0x0:不使能  0x1:使能                                 |
|            |  2  | STMR2刹车使能   0x0:不使能  0x1:使能                                 |
|            |  1  | STMR1刹车使能   0x0:不使能  0x1:使能                                 |
|            |  0  | STMR0刹车使能   0x0:不使能  0x1:使能                                 |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_BRKEN
#define _STMR_BRKEN
#define STMR_BRK_FB_EN(n)            ((n) << 7)  // FB端口刹车使能  0x0:不使能  0x1:使能
#define STMR_BRK_COMP_EN(n)          ((n) << 6)  // 比较器刹车使能  0x0:不使能  0x1:使能
#define STMR_5_BRK_EN(n)             ((n) << 5)  // STMR5刹车使能   0x0:不使能  0x1:使能
#define STMR_4_BRK_EN(n)             ((n) << 4)  // STMR4刹车使能   0x0:不使能  0x1:使能
#define STMR_3_BRK_EN(n)             ((n) << 3)  // STMR3刹车使能   0x0:不使能  0x1:使能
#define STMR_2_BRK_EN(n)             ((n) << 2)  // STMR2刹车使能   0x0:不使能  0x1:使能
#define STMR_1_BRK_EN(n)             ((n) << 1)  // STMR1刹车使能   0x0:不使能  0x1:使能
#define STMR_0_BRK_EN(n)             ((n) << 0)  // STMR0刹车使能   0x0:不使能  0x1:使能

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | FB端口刹车极性  0x0:刹车信号0有效  0x1:刹车信号1有效                 |
|            |  6  | 比较器刹车极性  0x0:刹车信号0有效  0x1:刹车信号1有效                 |
|            |  5  | ADC刹车极性     0x0:刹车信号0有效  0x1:刹车信号1有效                 |
|STMR_BRKCON |  4  | ADC刹车使能     0x0:不使能         0x1:使能                          |
|            |  3  | 刹车有效计数寄存器清零使能  0x0:不使能  0x1:使能                     |
|            |  2  | 软件刹车信号                0x0:不刹车  0x1:刹车                     |
|            |  1  | ADC/比较器/FB刹车滤波使能   0x0:不使能  0x1:使能                     |
|            |  0  | 比较器刹车选择  0x0:比较器0刹车有效  0x1:比较器1刹车有效             |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_BRKCON
#define _STMR_BRKCON
#define STMR_BRK_FB_POL(n)           ((n) << 7)  // FB端口刹车极性  0x0:刹车信号0有效  0x1:刹车信号1有效
#define STMR_BRK_COMP_POL(n)         ((n) << 6)  // 比较器刹车极性  0x0:刹车信号0有效  0x1:刹车信号1有效
#define STMR_5_BRK_ADC_POL(n)        ((n) << 5)  // ADC刹车极性     0x0:刹车信号0有效  0x1:刹车信号1有效
#define STMR_4_BRK_ADC_EN(n)         ((n) << 4)  // ADC刹车使能     0x0:不使能         0x1:使能
#define STMR_3_BRK_CNTCLR_EN(n)      ((n) << 3)  // 刹车有效计数寄存器清零使能  0x0:不使能  0x1:使能
#define STMR_2_BRK_SOF(n)            ((n) << 2)  // 软件刹车信号                0x0:不刹车  0x1:刹车
#define STMR_1_BRK_FILT_EN(n)        ((n) << 1)  // ADC/比较器/FB刹车滤波使能   0x0:不使能  0x1:使能
#define STMR_0_BRK_COMP_SEL(n)       ((n) << 0)  // 比较器刹车选择  0x0:比较器0刹车有效  0x1:比较器1刹车有效

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | STMR5刹车有效PWM输出值  0x0:刹车有效时PWM输出0 0x1:刹车有效时PWM输出1|
|            |  4  | STMR4刹车有效PWM输出值  0x0:刹车有效时PWM输出0 0x1:刹车有效时PWM输出1|
|STMR_BRKDAT |  3  | STMR3刹车有效PWM输出值  0x0:刹车有效时PWM输出0 0x1:刹车有效时PWM输出1|
|            |  2  | STMR2刹车有效PWM输出值  0x0:刹车有效时PWM输出0 0x1:刹车有效时PWM输出1|
|            |  1  | STMR1刹车有效PWM输出值  0x0:刹车有效时PWM输出0 0x1:刹车有效时PWM输出1|
|            |  0  | STMR0刹车有效PWM输出值  0x0:刹车有效时PWM输出0 0x1:刹车有效时PWM输出1|
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_BRKDAT
#define _STMR_BRKDAT
#define STMR_5_BRK_DAT(n)          ((n) << 5)  // STMR5刹车有效PWM输出值  0x0:刹车有效时PWM输出0  0x1:刹车有效时PWM输出1
#define STMR_4_BRK_DAT(n)          ((n) << 4)  // STMR4刹车有效PWM输出值  0x0:刹车有效时PWM输出0  0x1:刹车有效时PWM输出1
#define STMR_3_BRK_DAT(n)          ((n) << 3)  // STMR3刹车有效PWM输出值  0x0:刹车有效时PWM输出0  0x1:刹车有效时PWM输出1
#define STMR_2_BRK_DAT(n)          ((n) << 2)  // STMR2刹车有效PWM输出值  0x0:刹车有效时PWM输出0  0x1:刹车有效时PWM输出1
#define STMR_1_BRK_DAT(n)          ((n) << 1)  // STMR1刹车有效PWM输出值  0x0:刹车有效时PWM输出0  0x1:刹车有效时PWM输出1
#define STMR_0_BRK_DAT(n)          ((n) << 0)  // STMR0刹车有效PWM输出值  0x0:刹车有效时PWM输出0  0x1:刹车有效时PWM输出1

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|                | Bit |                    Description                                   |
|                |------------------------------------------------------------------------|
|  STMR_BRKFILT  | 7:6 |                                                                  |
|                | 5:0 | 刹车滤波时长  滤波时长为STMRBRKFILTNUM + 4个CLK                  |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_BRKFILT
#define _STMR_BRKFILT
#define STMR_STMR_BRK_FILT_NUM(n)  ((n) << 0)  // 刹车滤波时长  滤波时长为STMRBRKFILTNUM + 4个CLK

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
| STMR01_DT  | 7:0 | STMR0/STMR1死区时间寄存器                                            |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR01_DT
#define _STMR01_DT
#define STMR_01_DUTY_VAL(n)        ((n) << 0)  // STMR0/STMR1死区时间寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
| STMR23_DT  | 7:0 | STMR2/STMR3死区时间寄存器                                            |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR23_DT
#define _STMR23_DT
#define STMR_23_DUTY_VAL(n)        ((n) << 0)  // STMR2/STMR3死区时间寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
| STMR45_DT  | 7:0 | STMR4/STMR5死区时间寄存器                                            |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR45_DT
#define _STMR45_DT
#define STMR_45_DUTY_VAL(n)        ((n) << 0)  // STMR4/STMR5死区时间寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            | 5:3 | STMR2/STMR3死区模式选择                                              |
|            |     |    0x0:STMR2向上计数时比较点+死区时间,向下计数时无死区,              |
|            |     |        STMR3向上计数时无死区,向下计数时比较点-死区时间               |
|            |     |    0x1:STMR2向下计数时比较点+死区时间,向上计数时无死区,              |
|            |     |        STMR3向下计数时无死区,向上计数时比较点-死区时间               |
|            |     |    0x2:STMR2向上计数时比较点-死区时间,向下计数时无死区,              |
|            |     |        STMR3向上计数时无死区,向下计数时比较点+死区时间               |
|            |     |    0x3:STMR2向下计数时比较点-死区时间,向上计数时无死区,              |
|            |     |        STMR3向下计数时无死区,向上计数时比较点+死区时间               |
|            |     |    0x4:STMR2向下和向上计数时比较点-死区时间，STMR3无死区             |
|            |     |    0x5:STMR2向下和向上计数时比较点+死区时间，STMR3无死区             |
| STMR_DTCON |     |    0x6:STMR2无死区，STMR3向下和向上计数时比较点-死区时间             |
|            |     |    0x7:STMR2无死区，STMR3向下和向上计数时比较点+死区时间             |
|            | 2:0 | STMR0/STMR1死区模式选择                                              |
|            |     |    0x0:STMR0向上计数时比较点+死区时间,向下计数时无死区,              |
|            |     |        STMR1向上计数时无死区,向下计数时比较点-死区时间               |
|            |     |    0x1:STMR0向下计数时比较点+死区时间,向上计数时无死区,              |
|            |     |        STMR1向下计数时无死区,向上计数时比较点-死区时间               |
|            |     |    0x2:STMR0向上计数时比较点-死区时间,向下计数时无死区,              |
|            |     |        STMR1向上计数时无死区,向下计数时比较点+死区时间               |
|            |     |    0x3:STMR0向下计数时比较点-死区时间,向上计数时无死区,              |
|            |     |        STMR1向下计数时无死区,向上计数时比较点+死区时间               |
|            |     |    0x4:STMR0向下和向上计数时比较点-死区时间，STMR1无死区             |
|            |     |    0x5:STMR0向下和向上计数时比较点+死区时间，STMR1无死区             |
|            |     |    0x6:STMR0无死区，STMR1向下和向上计数时比较点-死区时间             |
|            |     |    0x7:STMR0无死区，STMR1向下和向上计数时比较点+死区时间             |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_DTCON
#define _STMR_DTCON
#define STMR_23_DUTY_TYPE(n)       ((n) << 3)  // STMR2/STMR3死区模式选择
                                               //    0x0:STMR2向上计数时比较点+死区时间,向下计数时无死区,
                                               //        STMR3向上计数时无死区,向下计数时比较点-死区时间
                                               //    0x1:STMR2向下计数时比较点+死区时间,向上计数时无死区,
                                               //        STMR3向下计数时无死区,向上计数时比较点-死区时间
                                               //    0x2:STMR2向上计数时比较点-死区时间,向下计数时无死区,
                                               //        STMR3向上计数时无死区,向下计数时比较点+死区时间
                                               //    0x3:STMR2向下计数时比较点-死区时间,向上计数时无死区,
                                               //        STMR3向下计数时无死区,向上计数时比较点+死区时间
                                               //    0x4:STMR2向下和向上计数时比较点-死区时间，STMR3无死区
                                               //    0x5:STMR2向下和向上计数时比较点+死区时间，STMR3无死区
                                               //    0x6:STMR2无死区，STMR3向下和向上计数时比较点-死区时间
                                               //    0x7:STMR2无死区，STMR3向下和向上计数时比较点+死区时间
#define STMR_01_DUTY_TYPE(n)       ((n) << 0)  // STMR0/STMR1死区模式选择
                                               //    0x0:STMR0向上计数时比较点+死区时间,向下计数时无死区,
                                               //        STMR1向上计数时无死区,向下计数时比较点-死区时间
                                               //    0x1:STMR0向下计数时比较点+死区时间,向上计数时无死区,
                                               //        STMR1向下计数时无死区,向上计数时比较点-死区时间
                                               //    0x2:STMR0向上计数时比较点-死区时间,向下计数时无死区,
                                               //        STMR1向上计数时无死区,向下计数时比较点+死区时间
                                               //    0x3:STMR0向下计数时比较点-死区时间,向上计数时无死区,
                                               //        STMR1向下计数时无死区,向上计数时比较点+死区时间
                                               //    0x4:STMR0向下和向上计数时比较点-死区时间，STMR1无死区
                                               //    0x5:STMR0向下和向上计数时比较点+死区时间，STMR1无死区
                                               //    0x6:STMR0无死区，STMR1向下和向上计数时比较点-死区时间
                                               //    0x7:STMR0无死区，STMR1向下和向上计数时比较点+死区时间

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            | 5:3 | STMR4/STMR5死区模式选择                                              |
|            |     |     0x0:STMR4向上计数时比较点+死区时间,向下计数时无死区,             |
|            |     |         STMR5向上计数时无死区,向下计数时比较点-死区时间              |
|            |     |     0x1:STMR4向下计数时比较点+死区时间,向上计数时无死区,             |
|            |     |         STMR5向下计数时无死区,向上计数时比较点-死区时间              |
|            |     |     0x2:STMR4向上计数时比较点-死区时间,向下计数时无死区,             |
|            |     |         STMR5向上计数时无死区,向下计数时比较点+死区时间              |
|            |     |     0x3:STMR4向下计数时比较点-死区时间,向上计数时无死区,             |
|            |     |         STMR5向下计数时无死区,向上计数时比较点+死区时间              |
|            |     |     0x4:STMR4向下和向上计数时比较点-死区时间，STMR5无死区            |
|            |     |     0x5:STMR4向下和向上计数时比较点+死区时间，STMR5无死区            |
| STMR_DTEN  |     |     0x6:STMR4无死区，STMR5向下和向上计数时比较点-死区时间            |
|            |     |     0x7:STMR4无死区，STMR5向下和向上计数时比较点+死区时间            |
|            |  2  | STMR4/STMR5死区使能  0x0:不使能  0x1:使能                            |
|            |  1  | STMR2/STMR3死区使能  0x0:不使能  0x1:使能                            |
|            |  0  | STMR0/STMR1死区使能  0x0:不使能  0x1:使能                            |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMR_DTEN
#define _STMR_DTEN
#define STMR_45_DUTY_TYPE(n)       ((n) << 3)  // STMR4/STMR5死区模式选择
                                               //     0x0:STMR4向上计数时比较点+死区时间,向下计数时无死区,
                                               //         STMR5向上计数时无死区,向下计数时比较点-死区时间
                                               //     0x1:STMR4向下计数时比较点+死区时间,向上计数时无死区,
                                               //         STMR5向下计数时无死区,向上计数时比较点-死区时间
                                               //     0x2:STMR4向上计数时比较点-死区时间,向下计数时无死区,
                                               //         STMR5向上计数时无死区,向下计数时比较点+死区时间
                                               //     0x3:STMR4向下计数时比较点-死区时间,向上计数时无死区,
                                               //         STMR5向下计数时无死区,向上计数时比较点+死区时间
                                               //     0x4:STMR4向下或向上计数时比较点-死区时间，STMR5无死区
                                               //     0x5:STMR4向下或向上计数时比较点+死区时间，STMR5无死区
                                               //     0x6:STMR4无死区，STMR5向下或向上计数时比较点-死区时间
                                               //     0x7:STMR4无死区，STMR5向下或向上计数时比较点+死区时间
#define STMR_45_DUTY_EN(n)         ((n) << 2)  // STMR4/STMR5死区使能  0x0:不使能  0x1:使能
#define STMR_23_DUTY_EN(n)         ((n) << 1)  // STMR2/STMR3死区使能  0x0:不使能  0x1:使能
#define STMR_01_DUTY_EN(n)         ((n) << 0)  // STMR0/STMR1死区使能  0x0:不使能  0x1:使能

/*******************************************************************************************
|------------------------------------------------------------------------------------------|
|             | Bit |                    Description                                       |
|             |----------------------------------------------------------------------------|
|             | 7:6 |                                                                      |
|             |  5  | STMR5 PWM边沿选择  0x0:STMR5 PWM下降沿触发STMR4死区事件              |
|             |     |                    0x1:STMR5 PWM上升沿触发STMR4死区事件              |
|             |  4  | STMR4 PWM边沿选择  0x0:STMR4 PWM下降沿触发STMR5死区事件              |
|             |     |                    0x1:STMR4 PWM上升沿触发STMR5死区事件              |
| STMR_EDGESEL|  3  | STMR3 PWM边沿选择  0x0:STMR3 PWM下降沿触发STMR2死区事件              |
|             |     |                    0x1:STMR3 PWM上升沿触发STMR2死区事件              |
|             |  2  | STMR2 PWM边沿选择  0x0:STMR2 PWM下降沿触发STMR3死区事件              |
|             |     |                    0x1:STMR2 PWM上升沿触发STMR3死区事件              |
|             |  1  | STMR1 PWM边沿选择  0x0:STMR1 PWM下降沿触发STMR0死区事件              |
|             |     |                    0x1:STMR1 PWM上升沿触发STMR0死区事件              |
|             |  0  | STMR0 PWM边沿选择  0x0:STMR0 PWM下降沿触发STMR1死区事件              |
|             |     |                    0x1:STMR0 PWM上升沿触发STMR1死区事件              |
|------------------------------------------------------------------------------------------|
*******************************************************************************************/
// STMR_EDGESEL
#define _STMR_EDGESEL
#define STMR_5_EDGE_SEL(n)          ((n) << 5)  // STMR5 PWM边沿选择  0x0:STMR5 PWM下降沿触发STMR4死区事件
                                                //                    0x1:STMR5 PWM上升沿触发STMR4死区事件
#define STMR_4_EDGE_SEL(n)          ((n) << 4)  // STMR4 PWM边沿选择  0x0:STMR4 PWM下降沿触发STMR5死区事件
                                                //                    0x1:STMR4 PWM上升沿触发STMR5死区事件
#define STMR_3_EDGE_SEL(n)          ((n) << 3)  // STMR3 PWM边沿选择  0x0:STMR3 PWM下降沿触发STMR2死区事件
                                                //                    0x1:STMR3 PWM上升沿触发STMR2死区事件
#define STMR_2_EDGE_SEL(n)          ((n) << 2)  // STMR2 PWM边沿选择  0x0:STMR2 PWM下降沿触发STMR3死区事件
                                                //                    0x1:STMR2 PWM上升沿触发STMR3死区事件
#define STMR_1_EDGE_SEL(n)          ((n) << 1)  // STMR1 PWM边沿选择  0x0:STMR1 PWM下降沿触发STMR0死区事件
                                                //                    0x1:STMR1 PWM上升沿触发STMR0死区事件
#define STMR_0_EDGE_SEL(n)          ((n) << 0)  // STMR0 PWM边沿选择  0x0:STMR0 PWM下降沿触发STMR1死区事件
                                                //                    0x1:STMR0 PWM上升沿触发STMR1死区事件

/*******************************************************************************************
|------------------------------------------------------------------------------------------|
|             | Bit |                    Description                                       |
|             |----------------------------------------------------------------------------|
|             | 7:6 |                                                                      |
|             |  5  | STMR5死区事件触发后,PWM死区时间内输出值                              |
|             |     | 0x0:STMR5 PWM死区时间内输出0  0x1:STMR5 PWM死区时间内输出1           |
|             |  4  | STMR4死区事件触发后,PWM死区时间内输出值                              |
|             |     | 0x0:STMR4 PWM死区时间内输出0  0x1:STMR4 PWM死区时间内输出1           |
|  STMR_DTDAT |  3  | STMR3死区事件触发后,PWM死区时间内输出值                              |
|             |     | 0x0:STMR3 PWM死区时间内输出0  0x1:STMR3 PWM死区时间内输出1           |
|             |  2  | STMR2死区事件触发后,PWM死区时间内输出值                              |
|             |     | 0x0:STMR2 PWM死区时间内输出0  0x1:STMR2 PWM死区时间内输出1           |
|             |  1  | STMR1死区事件触发后,PWM死区时间内输出值                              |
|             |     | 0x0:STMR1 PWM死区时间内输出0  0x1:STMR1 PWM死区时间内输出1           |
|             |  0  | STMR0死区事件触发后,PWM死区时间内输出值                              |
|             |     | 0x0:STMR0 PWM死区时间内输出0  0x1:STMR0 PWM死区时间内输出1           |
|------------------------------------------------------------------------------------------|
*******************************************************************************************/
// STMR_DTDAT
#define _STMR_DTDAT
#define STMR_5_DUTY_DAT(n)          ((n) << 5)  // STMR5死区事件触发后,PWM死区时间内输出值
                                                // 0x0:STMR5 PWM死区时间内输出0  0x1:STMR5 PWM死区时间内输出1
#define STMR_4_DUTY_DAT(n)          ((n) << 4)  // STMR4死区事件触发后,PWM死区时间内输出值
                                                // 0x0:STMR4 PWM死区时间内输出0  0x1:STMR4 PWM死区时间内输出1
#define STMR_3_DUTY_DAT(n)          ((n) << 3)  // STMR3死区事件触发后,PWM死区时间内输出值
                                                // 0x0:STMR3 PWM死区时间内输出0  0x1:STMR3 PWM死区时间内输出1
#define STMR_2_DUTY_DAT(n)          ((n) << 2)  // STMR2死区事件触发后,PWM死区时间内输出值
                                                // 0x0:STMR2 PWM死区时间内输出0  0x1:STMR2 PWM死区时间内输出1
#define STMR_1_DUTY_DAT(n)          ((n) << 1)  // STMR1死区事件触发后,PWM死区时间内输出值
                                                // 0x0:STMR1 PWM死区时间内输出0  0x1:STMR1 PWM死区时间内输出1
#define STMR_0_DUTY_DAT(n)          ((n) << 0)  // STMR0死区事件触发后,PWM死区时间内输出值
                                                // 0x0:STMR0 PWM死区时间内输出0  0x1:STMR0 PWM死区时间内输出1

/*******************************************************************************************
|------------------------------------------------------------------------------------------|
|             | Bit |                    Description                                       |
|             |----------------------------------------------------------------------------|
|             | 7:5 |                                                                      |
|  STMRn_IE   |  4  | STMRn刹车中断使能                0x0:不使能  0x1:使能                |
|   (n=0~5)   |  3  | STMRn 计数值等于比较值B中断使能  0x0:不使能  0x1:使能                |
|             |  2  | STMRn 计数值等于比较值A中断使能  0x0:不使能  0x1:使能                |
|             |  1  | STMRn 计数值等于0中断使能        0x0:不使能  0x1:使能                |
|             |  0  | STMRn 计数值等于周期中断使能     0x0:不使能  0x1:使能                |
|------------------------------------------------------------------------------------------|
*******************************************************************************************/
// STMRn_IE (n=0~5)
#define _STMRn_IE
#define _STMR0_IE
#define _STMR1_IE
#define _STMR2_IE
#define _STMR3_IE
#define _STMR4_IE
#define _STMR5_IE
#define STMR_BRK_IRQ_EN(n)          ((n) << 4)  // STMRn刹车中断使能                0x0:不使能  0x1:使能
#define STMR_CMPB_IRQ_EN(n)         ((n) << 3)  // STMRn 计数值等于比较值B中断使能  0x0:不使能  0x1:使能
#define STMR_CMPA_IRQ_EN(n)         ((n) << 2)  // STMRn 计数值等于比较值A中断使能  0x0:不使能  0x1:使能
#define STMR_ZERO_IRQ_EN(n)         ((n) << 1)  // STMRn 计数值等于0中断使能        0x0:不使能  0x1:使能
#define STMR_PRD_IRQ_EN(n)          ((n) << 0)  // STMRn 计数值等于周期中断使能     0x0:不使能  0x1:使能

/*******************************************************************************************
|------------------------------------------------------------------------------------------|
|             | Bit |                    Description                                       |
|             |----------------------------------------------------------------------------|
|             | 7:5 |                                                                      |
|  STMRn_IF   |  4  | STMRn刹车有效标志                                                    |
|             |     |     0x0:刹车无效或没有发生       0x1:刹车已经发生且有效              |
|   (n=0~5)   |  3  | STMRn计数等于比较值B有效标志                                         |
|             |     |     0x0:无效或计数不等于比较值B  0x1:计数等于比较值B已经发生且有效   |
|             |  2  | STMRn计数等于比较值A有效标志                                         |
|             |     |     0x0:无效或计数不等于比较值A  0x1:计数等于比较值A已经发生且有效   |
|             |  1  | STMRn计数等于0有效标志                                               |
|             |     |     0x0:无效或计数不等于0        0x1:计数等于0已经发生且有效         |
|             |  0  | STMRn计数等于周期有效标志(Note:边沿对齐模式时,计数等于周期无中断标志)|
|             |     |     0x0:无效或计数不等于周期     0x1:计数等于周期已经发生且有效      |
|------------------------------------------------------------------------------------------|
*******************************************************************************************/
// STMRn_IF (n=0~5)
#define _STMR0_IF
#define _STMR1_IF
#define _STMR2_IF
#define _STMR3_IF
#define _STMR4_IF
#define _STMR5_IF
#define STMR_BRK_FLAG(n)            ((n) << 4)  // STMRn刹车有效标志  
                                                //     0x0:刹车无效或没有发生       0x1:刹车已经发生且有效
#define STMR_CMPB_FLAG(n)           ((n) << 3)  // STMRn计数等于比较值B有效标志  
                                                //     0x0:无效或计数不等于比较值B  0x1:计数等于比较值B已经发生且有效
#define STMR_CMPA_FLAG(n)           ((n) << 2)  // STMRn计数等于比较值A有效标志  
                                                //     0x0:无效或计数不等于比较值A  0x1:计数等于比较值A已经发生且有效
#define STMR_ZERO_FLAG(n)           ((n) << 1)  // STMRn计数等于0有效标志  
                                                //     0x0:无效或计数不等于0        0x1:计数等于0已经发生且有效
#define STMR_PRD_FLAG(n)            ((n) << 0)  // STMRn计数等于周期有效标志(Note:边沿对齐模式时，计数等于周期无中断标志)
                                                //     0x0:无效或计数不等于周期     0x1:计数等于周期已经发生且有效

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
| STMRn_PRL  |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn周期低八位寄存器                                                |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_PRL (n=0~5)
#define _STMR0_PRL
#define _STMR1_PRL
#define _STMR2_PRL
#define _STMR3_PRL
#define _STMR4_PRL
#define _STMR5_PRL
#define _STMRn_PRL (n=0~5)
#define STMR_PRD_VAL_L(n)           ((n) << 0)  // STMRn周期低八位寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
| STMRn_PRH  |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn周期高八位寄存器                                                |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_PRH (n=0~5)
#define _STMR0_PRH
#define _STMR1_PRH
#define _STMR2_PRH
#define _STMR3_PRH
#define _STMR4_PRH
#define _STMR5_PRH
#define _STMRn_PRH (n=0~5)
#define STMR_PRD_VAL_H(n)         ((n) << 0)  // STMRn周期高八位寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|STMRn_CMPAL |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn比较值A点低八位寄存器                                           |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_CMPAL (n=0~5)
#define _STMRn_CMPAL (n=0~5)
#define _STMR0_CMPAL
#define _STMR1_CMPAL
#define _STMR2_CMPAL
#define _STMR3_CMPAL
#define _STMR4_CMPAL
#define _STMR5_CMPAL
#define STMR_CMPA_VAL_L(n)        ((n) << 0)  // STMRn比较值A点低八位寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|STMRn_CMPAH |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn比较值A点高八位寄存器                                           |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_CMPAH (n=0~5)
#define _STMRn_CMPAH (n=0~5)
#define _STMR0_CMPAH
#define _STMR1_CMPAH
#define _STMR2_CMPAH
#define _STMR3_CMPAH
#define _STMR4_CMPAH
#define _STMR5_CMPAH
#define STMR_CMPA_VAL_H(n)        ((n) << 0)  // STMRn比较值A点高八位寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|STMRn_CMPBL |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn比较值B点低八位寄存器                                           |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_CMPBL (n=0~5)
#define _STMRn_CMPBL (n=0~5)
#define _STMR0_CMPBL
#define _STMR1_CMPBL
#define _STMR2_CMPBL
#define _STMR3_CMPBL
#define _STMR4_CMPBL
#define _STMR5_CMPBL
#define STMR_CMPB_VAL_L(n)        ((n) << 0)  // STMRn比较值B点低八位寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|STMRn_CMPBH |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn比较值B点高八位寄存器                                           |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_CMPBH (n=0~5)
#define _STMRn_CMPBH (n=0~5)
#define _STMR0_CMPBH
#define _STMR1_CMPBH
#define _STMR2_CMPBH
#define _STMR3_CMPBH
#define _STMR4_CMPBH
#define _STMR5_CMPBH
#define STMR_CMPB_VAL_H(n)        ((n) << 0)  // STMRn比较值B点高八位寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
| STMRn_PSC  |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn计数分频寄存器                                                  |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_PSC (n=0~5)
#define _STMRn_PSC (n=0~5)
#define _STMR0_PSC
#define _STMR1_PSC
#define _STMR2_PSC
#define _STMR3_PSC
#define _STMR4_PSC
#define _STMR5_PSC
#define STMR_PRESCALE_VAL(n)      ((n) << 0)  // STMRn计数分频寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
| STMRn_CNTL |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn计数低八位寄存器                                                |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_CNTL (n=0~5)
#define _STMRn_CNTL (n=0~5)
#define _STMR0_CNTL
#define _STMR1_CNTL
#define _STMR2_CNTL
#define _STMR3_CNTL
#define _STMR4_CNTL
#define _STMR5_CNTL
#define STMR_CNT_VAL_L(n)        ((n) << 0)  // STMRn计数低八位寄存器

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
| STMRn_CNTH |----------------------------------------------------------------------------|
|  (n=0~5)   | 7:0 | STMRn计数高八位寄存器                                                |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// STMRn_CNTH (n=0~5)
#define _STMRn_CNTH (n=0~5)
#define _STMR0_CNTH
#define _STMR1_CNTH
#define _STMR2_CNTH
#define _STMR3_CNTH
#define _STMR4_CNTH
#define _STMR5_CNTH
#define STMR_CNT_VAL_H(n)        ((n) << 0)  // STMRn计数高八位寄存器


/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/
/* Private function prototypes -----------------------------------------------*/
/* Private functions ---------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

#endif // __STIMER_H__

/**
  * @}
  */

/**
  * @}
  */

/*************************** (C) COPYRIGHT 2021 HUGE-IC ***** END OF FILE *****/
