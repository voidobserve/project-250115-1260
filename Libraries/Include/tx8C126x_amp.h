/**
  ******************************************************************************
  * @file    amp.h
  * @author  HUGE-IC Application Team
  * @version V1.0.0
  * @date    01-05-2021
  * @brief   This file contains all the SYSTEM LL firmware functions.
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  *
  *
  */ 
  
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __AMP_H__
#define __AMP_H__

#ifdef __cplusplus
 extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/


/***************************************************************************************************
|--------------------------------------------------------------------------------------------------|
|                                            AMP                                                   |
|--------------------------------------------------------------------------------------------------|
***************************************************************************************************/

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  |                                                                      |
|            |  6  | 运放比较器中断触发边沿选择      0x0:上升沿触发  0x1:下降沿触发       |
|            |  5  | 运放PGA2的比较器触发中断使能位  0x0:不使能      0x1:使能中断         |
|  AMP_CON0  |  4  | 运放PGA1的比较器触发中断使能位  0x0:不使能      0x1:使能中断         |
|            |  3  | 运放PGA0的比较器触发中断使能位  0x0:不使能      0x1:使能中断         |
|            |  2  | 运放PGA1的比较器输出值                                               |
|            |  1  | 运放PGA1的比较器输出值                                               |
|            |  0  | 运放PGA0的比较器输出值                                               |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON0
#define _AMP_CON0
#define AMP_TRIG_SEL(n)            ((n) << 6)  // 运放比较器中断触发边沿选择      0x0:上升沿触发  0x1:下降沿触发
#define AMP_CMP2_IRQ_EN(n)         ((n) << 5)  // 运放PGA2的比较器触发中断使能位  0x0:不使能      0x1:使能中断
#define AMP_CMP1_IRQ_EN(n)         ((n) << 4)  // 运放PGA1的比较器触发中断使能位  0x0:不使能      0x1:使能中断
#define AMP_CMP0_IRQ_EN(n)         ((n) << 3)  // 运放PGA0的比较器触发中断使能位  0x0:不使能      0x1:使能中断
#define AMP_CMP2_OUT(n)            ((n) << 2)  // 运放PGA1的比较器输出值
#define AMP_CMP1_OUT(n)            ((n) << 1)  // 运放PGA1的比较器输出值
#define AMP_CMP0_OUT(n)            ((n) << 0)  // 运放PGA0的比较器输出值

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:5 | PGA0内置负向输入电阻选择  0x0:160KΩ  0x1:80KΩ  0x2:40KΩ   0x3:20KΩ   |
|            |     |                           0x4:10KΩ   0x5:5KΩ   0x6:2.5KΩ  0x7:1.25KΩ |
|  AMP_CON1  |     | Note:和RFB配合起来在负向输入PGA模式获得0dB增益,                      |
|            |     |      在正向输入PGA模式获得6dB增益!                                   |
|            | 4:3 | PGA0内置反馈电阻选择  0x0:80KΩ  0x1:160KΩ  0x2:320KΩ  0x3:640KΩ      |
|            | 2:0 | PGA0的偏置电流选择                                                   |
|            |     | BIT0为运放总电流选择,BIT1为输出级电流选择,BIT2为OFFSET电流选择;      |
|            |     | 对应BIT置1为大电流,0为小电流;default=1,即只有运放总电流选择大电流;   |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON1
#define _AMP_CON1
#define AMP_PGA0_RIN(n)            ((n) << 5)  // PGA0内置负向输入电阻选择  0x0:160KΩ  0x1:80KΩ  0x2:40KΩ   0x3:20KΩ
                                               //                           0x4:10KΩ   0x5:5KΩ   0x6:2.5KΩ  0x7:1.25KΩ
                                               // Note:和RFB配合起来在负向输入PGA模式获得0dB增益,在正向输入PGA模式获得6dB增益!
#define AMP_PGA0_RFB(n)            ((n) << 3)  // PGA0内置反馈电阻选择  0x0:80KΩ  0x1:160KΩ  0x2:320KΩ  0x3:640KΩ
#define AMP_PGA0_IB(n)             ((n) << 0)  // PGA0的偏置电流选择
                                               // BIT0为运放总电流选择,BIT1为输出级电流选择,BIT2为OFFSET电流选择;
                                               // 对应BIT置1为大电流,0为小电流;default=1,即只有运放总电流选择大电流;

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:0 | PGA0的offset trim选项                                                |
|            |     | 其中BIT7为符号位,BIT6:0为选择位。在trim模式,                         |
|  AMP_CON2  |     | 如果CMPOUT_VDD=0,对应的BIT7置0,BIT6:0逐渐增大直至CMPOUT_VDD=1;       |
|            |     | 如果CMPOUT_VDD=1,对应的BIT7置1,BIT6:0逐渐增大直至CMPOUT_VDD=0;       |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON2
#define _AMP_CON2
#define AMP_PGA0_TRIM(n)            ((n) << 0)  // PGA0的offset trim选项
                                                // 其中BIT7为符号位,BIT6:0为选择位。在trim模式,
                                                // 如果CMPOUT_VDD=0,对应的BIT7置0,BIT6:0逐渐增大直至CMPOUT_VDD=1;
                                                // 如果CMPOUT_VDD=1,对应的BIT7置1,BIT6:0逐渐增大直至CMPOUT_VDD=0;

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:5 | PGA1内置负向输入电阻选择  0x0:160KΩ  0x1:80KΩ  0x2:40KΩ   0x3:20KΩ   |
|            |     |                           0x4:10KΩ   0x5:5KΩ   0x6:2.5KΩ  0x7:1.25KΩ |
|  AMP_CON3  |     | Note:和RFB配合起来在负向输入PGA模式获得0dB增益,                      |
|            |     |      在正向输入PGA模式获得6dB增益!                                   |
|            | 4:3 | PGA1内置反馈电阻选择  0x0:80KΩ  0x1:160KΩ  0x2:320KΩ  0x3:640KΩ      |
|            | 2:0 | PGA1的偏置电流选择                                                   |
|            |     | BIT0为运放总电流选择,BIT1为输出级电流选择,BIT2为OFFSET电流选择;      |
|            |     | 对应BIT置1为大电流,0为小电流;default=1,即只有运放总电流选择大电流;   |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON3
#define _AMP_CON3
#define AMP_PGA1_RIN(n)            ((n) << 5)  // PGA1内置负向输入电阻选择  0x0:160KΩ  0x1:80KΩ  0x2:40KΩ   0x3:20KΩ
                                               //                           0x4:10KΩ   0x5:5KΩ   0x6:2.5KΩ  0x7:1.25KΩ
                                               // Note:和RFB配合起来在负向输入PGA模式获得0dB增益,在正向输入PGA模式获得6dB增益!
#define AMP_PGA1_RFB(n)            ((n) << 3)  // PGA1内置反馈电阻选择  0x0:80KΩ  0x1:160KΩ  0x2:320KΩ  0x3:640KΩ
#define AMP_PGA1_IB(n)             ((n) << 0)  // PGA1的偏置电流选择
                                               // BIT0为运放总电流选择,BIT1为输出级电流选择,BIT2为OFFSET电流选择;
                                               // 对应BIT置1为大电流,0为小电流;default=1,即只有运放总电流选择大电流;

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:0 | PGA1的offset trim选项                                                |
|            |     | 其中BIT7为符号位,BIT6:0为选择位。在trim模式,                         |
|  AMP_CON4  |     | 如果CMPOUT_VDD=0,对应的BIT7置0,BIT6:0逐渐增大直至CMPOUT_VDD=1;       |
|            |     | 如果CMPOUT_VDD=1,对应的BIT7置1,BIT6:0逐渐增大直至CMPOUT_VDD=0;       |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON4
#define _AMP_CON4
#define AMP_PGA1_TRIM(n)           ((n) << 0)  // PGA1的offset trim选项
                                               // 其中BIT7为符号位,BIT6:0为选择位。在trim模式,
                                               // 如果CMPOUT_VDD=0,对应的BIT7置0,BIT6:0逐渐增大直至CMPOUT_VDD=1;
                                               // 如果CMPOUT_VDD=1,对应的BIT7置1,BIT6:0逐渐增大直至CMPOUT_VDD=0;

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:5 | PGA2内置负向输入电阻选择  0x0:160KΩ  0x1:80KΩ  0x2:40KΩ   0x3:20KΩ   |
|            |     |                           0x4:10KΩ   0x5:5KΩ   0x6:2.5KΩ  0x7:1.25KΩ |
|  AMP_CON5  |     | Note:和RFB配合起来在负向输入PGA模式获得0dB增益,                      |
|            |     |      在正向输入PGA模式获得6dB增益!                                   |
|            | 4:3 | PGA2内置反馈电阻选择  0x0:80KΩ  0x1:160KΩ  0x2:320KΩ  0x3:640KΩ      |
|            | 2:0 | PGA2的偏置电流选择                                                   |
|            |     | BIT0为运放总电流选择,BIT1为输出级电流选择,BIT2为OFFSET电流选择;      |
|            |     | 对应BIT置1为大电流,0为小电流;default=1,即只有运放总电流选择大电流;   |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON5
#define _AMP_CON5
#define AMP_PGA2_RIN(n)            ((n) << 5)  // PGA2内置负向输入电阻选择  0x0:160KΩ  0x1:80KΩ  0x2:40KΩ   0x3:20KΩ
                                               //                           0x4:10KΩ   0x5:5KΩ   0x6:2.5KΩ  0x7:1.25KΩ
                                               // Note:和RFB配合起来在负向输入PGA模式获得0dB增益,在正向输入PGA模式获得6dB增益!
#define AMP_PGA2_RFB(n)            ((n) << 3)  // PGA2内置反馈电阻选择  0x0:80KΩ  0x1:160KΩ  0x2:320KΩ  0x3:640KΩ
#define AMP_PGA2_IB(n)             ((n) << 0)  // PGA2的偏置电流选择
                                               // BIT0为运放总电流选择,BIT1为输出级电流选择,BIT2为OFFSET电流选择;
                                               // 对应BIT置1为大电流,0为小电流;default=1,即只有运放总电流选择大电流;

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:0 | PGA2的offset trim选项                                                |
|            |     | 其中BIT7为符号位,BIT6:0为选择位。在trim模式,                         |
|  AMP_CON6  |     | 如果CMPOUT_VDD=0,对应的BIT7置0,BIT6:0逐渐增大直至CMPOUT_VDD=1;       |
|            |     | 如果CMPOUT_VDD=1,对应的BIT7置1,BIT6:0逐渐增大直至CMPOUT_VDD=0;       |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON6
#define _AMP_CON6
#define AMP_PGA2_TRIM(n)           ((n) << 0)  // PGA2的offset trim选项
                                               // 其中BIT7为符号位,BIT6:0为选择位。在trim模式,
                                               // 如果CMPOUT_VDD=0,对应的BIT7置0,BIT6:0逐渐增大直至CMPOUT_VDD=1;
                                               // 如果CMPOUT_VDD=1,对应的BIT7置1,BIT6:0逐渐增大直至CMPOUT_VDD=0;

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | AMP2内部反馈通路选择  0x0：使用外部输入电阻和反馈电阻，即OP模式；    |
|            |     |                       0x1：使用内部输入电阻和反馈电阻，即PGA模式；   |
|            |  6  | AMP1内部反馈通路选择  0x0：使用外部输入电阻和反馈电阻，即OP模式；    |
|            |     |                       0x1：使用内部输入电阻和反馈电阻，即PGA模式；   |
|   AMP_CON7 |  5  | AMP0内部反馈通路选择  0x0：使用外部输入电阻和反馈电阻，即OP模式；    |
|            |     |                       0x1：使用内部输入电阻和反馈电阻，即PGA模式；   |
|            |  4  | AMP2内置比较器模式使能  0x0：不使能比较器模式  0x1：使能比较器模式   |
|            |  3  | AMP1内置比较器模式使能  0x0：不使能比较器模式  0x1：使能比较器模式   |
|            |  2  | AMP0内置比较器模式使能  0x0：不使能比较器模式  0x1：使能比较器模式   |
|            |  1  | PGA1输出到PGA2的输入使能  0x0：不使能  0x1：使能                     |
|            |  0  | PGA0输出到PGA1的输入使能  0x0：不使能  0x1：使能                     |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON7
#define _AMP_CON7
#define AMP2_FB_SEL(n)             ((n) << 7)  // AMP2内部反馈通路选择  0x0：使用外部输入电阻和反馈电阻，即OP模式；                        
                                               //                       0x1：使用内部输入电阻和反馈电阻，即PGA模式； 
#define AMP1_FB_SEL(n)             ((n) << 6)  // AMP1内部反馈通路选择  0x0：使用外部输入电阻和反馈电阻，即OP模式；                       
                                               //                       0x1：使用内部输入电阻和反馈电阻，即PGA模式；
#define AMP0_FB_SEL(n)             ((n) << 5)  // AMP0内部反馈通路选择  0x0：使用外部输入电阻和反馈电阻，即OP模式；                        
                                               //                       0x1：使用内部输入电阻和反馈电阻，即PGA模式；
#define AMP2_CMP_MODE_EN(n)        ((n) << 4)  // AMP2内置比较器模式使能  0x0：不使能比较器模式  0x1：使能比较器模式     
#define AMP1_CMP_MODE_EN(n)        ((n) << 3)  // AMP1内置比较器模式使能  0x0：不使能比较器模式  0x1：使能比较器模式   
#define AMP0_CMP_MODE_EN(n)        ((n) << 2)  // AMP0内置比较器模式使能  0x0：不使能比较器模式  0x1：使能比较器模式  
#define PGA1_TO_PGA2_EN(n)         ((n) << 1)  // PGA1输出到PGA2的输入使能  0x0：不使能  0x1：使能             
#define PGA0_TO_PGA1_EN(n)         ((n) << 0)  // PGA0输出到PGA1的输入使能  0x0：不使能  0x1：使能             

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  |  AMP2负相输入端到IO的通路选择使能  0x0：不使能  0x1：使能            |
|            |  6  |  AMP1负相输入端到IO的通路选择使能  0x0：不使能  0x1：使能            |
|            |  5  |  AMP0负相输入端到IO的通路选择使能  0x0：不使能  0x1：使能            |
|  AMP_CON8  |  4  |  PGA2的OUTI选通到PGA2的VINI使能  0x0：不使能  0x1：使能              |
|            |  3  |  PGA2的OUT输出通过10K电阻到PGAOUTF使能  0x0：不使能                  |
|            |  2  |  PGA2的IN选通到AVSS（VSSPGA）使能  0x0：不使能  0x1：使能            |
|            |  1  |  PGA2的IN选通到PGA0的IP使能  0x0：不使能  0x1：使能                  |
|            |  0  |  PGA2的IP选通到PGA0的IN使能  0x0：不使能  0x1：使能                  |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON8
#define _AMP_CON8
#define AMP2_IN2_IO(n)             ((n) << 7)  // AMP2负相输入端到IO的通路选择使能  0x0：不使能  0x1：使能
#define AMP1_IN2_IO(n)             ((n) << 6)  // AMP1负相输入端到IO的通路选择使能  0x0：不使能  0x1：使能
#define AMP0_IN2_IO(n)             ((n) << 5)  // AMP0负相输入端到IO的通路选择使能  0x0：不使能  0x1：使能                                            
#define AMP_PGA2_IO(n)             ((n) << 4)  // PGA2的OUTI选通到PGA2的VINI使能  0x0：不使能  0x1：使能  
#define PGA2_OUT_10K_EN(n)         ((n) << 3)  // PGA2的OUT输出通过10K电阻到PGAOUTF使能  0x0：不使能                                                 
#define AVSS_TO_PGA2_IN_EN(n)      ((n) << 2)  // PGA2的IN选通到AVSS（VSSPGA）使能  0x0：不使能  0x1：使能                                           
#define PGA0_IP_TO_PGA2_IN_EN(n)   ((n) << 1)  // PGA2的IN选通到PGA0的IP使能  0x0：不使能  0x1：使能       
#define PGA0_IN_TO_PGA2_IP_EN(n)   ((n) << 0)  // PGA2的IP选通到PGA0的IN使能  0x0：不使能  0x1：使能                                                

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            |  7  | AMP2正相输入端到IO的通路选择使能  0x0：不使能  0x1：使能             |
|            |  6  | AMP1正相输入端到IO的通路选择使能  0x0：不使能  0x1：使能             |
|            |  5  | AMP0正相输入端到IO的通路选择使能  0x0：不使能  0x1：使能             |
|  AMP_CON9  |  4  | AMP2内部正负输入端短接功能,用于offset校正  0x0：不短接  0x1：短接    | 
|            |  3  | AMP1内部正负输入端短接功能,用于offset校正  0x0：不短接  0x1：短接    |
|            |  2  | AMP0内部正负输入端短接功能,用于offset校正  0x0：不短接  0x1：短接    |
|            |  1  | AMP模块低功耗模式使能（功耗<luA）  0x0：正常模式  0x1：低功耗模式    |
|            |  0  | PGA总偏置电流选择  0x0：1X  0x1：2X                                  |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON9
#define _AMP_CON9
#define AMP2_IP2_IO_EN(n)          ((n) << 7)  // AMP2正相输入端到IO的通路选择使能  0x0：不使能  0x1：使能         
#define AMP1_IP2_IO_EN(n)          ((n) << 6)  // AMP1正相输入端到IO的通路选择使能  0x0：不使能  0x1：使能         
#define AMP0_IP2_IO_EN(n)          ((n) << 5)  // AMP0正相输入端到IO的通路选择使能  0x0：不使能  0x1：使能         
#define AMP2_IP2_IN(n)             ((n) << 4)  // AMP2内部正负输入端短接功能,用于offset校正  0x0：不短接  0x1：短接
#define AMP1_IP2_IN(n)             ((n) << 3)  // AMP1内部正负输入端短接功能,用于offset校正  0x0：不短接  0x1：短接
#define AMP0_IP2_IN(n)             ((n) << 2)  // AMP0内部正负输入端短接功能,用于offset校正  0x0：不短接  0x1：短接
#define AMP_LP_EN(n)               ((n) << 1)  // AMP模块低功耗模式使能（功耗<luA）  0x0：正常模式  0x1：低功耗模式
#define AMP_PGA_IB(n)              ((n) << 0)  // PGA总偏置电流选择  0x0：1X  0x1：2X                              

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:6 |                                                                      |
|            |  5  | AMP2输出端到IO的通路选择使能  0x0：不使能  0x1：使能                 |
|            |  4  | AMP1输出端到IO的通路选择使能  0x0：不使能  0x1：使能                 |
|            |  3  | AMP0输出端到IO的通路选择使能  0x0：不使能  0x1：使能                 |
|            |  2  | AMP2正相输入端口选择                                                 |
|  AMP_CON10 |     | 0x0：外部IO输入（注意对应的IP2IO要使能）  0x1：内部VCM参考电压       |
|            |  1  | AMP1正相输入端口选择                                                 |
|            |     | 0x0：外部IO输入（注意对应的IP2IO要使能）  0x1：内部VCM参考电压       |
|            |  0  | AMP0正相输入端口选择                                                 |
|            |     | 0x0：外部IO输入（注意对应的IP2IO要使能）  0x1：内部VCM参考电压       |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON10
#define _AMP_CON10
#define AMP2_OUT2_IO_EN(n)         ((n) << 5)  // AMP2输出端到IO的通路选择使能  0x0：不使能  0x1：使能          
#define AMP1_OUT2_IO_EN(n)         ((n) << 4)  // AMP1输出端到IO的通路选择使能  0x0：不使能  0x1：使能          
#define AMP0_OUT2_IO_EN(n)         ((n) << 3)  // AMP0输出端到IO的通路选择使能  0x0：不使能  0x1：使能          
#define AMP2_IP_SEL(n)             ((n) << 2)  // AMP2正相输入端口选择                                          
                                               // 0x0：外部IO输入（注意对应的IP2IO要使能）  0x1：内部VCM参考电压
#define AMP1_IP_SEL(n)             ((n) << 1)  // AMP1正相输入端口选择                                          
                                               // 0x0：外部IO输入（注意对应的IP2IO要使能）  0x1：内部VCM参考电压
#define AMP0_IP_SEL(n)             ((n) << 0)  // AMP0正相输入端口选择                                          
                                               // 0x0：外部IO输入（注意对应的IP2IO要使能）  0x1：内部VCM参考电压

/******************************************************************************************
|-----------------------------------------------------------------------------------------|
|            | Bit |                    Description                                       |
|            |----------------------------------------------------------------------------|
|            | 7:3 |                                                                      |
|            |  2  | PGA2使能  0x0:不使能  0x1:使能                                       |
|  AMP_CON11 |  1  | PGA1使能  0x0:不使能  0x1:使能                                       |
|            |  0  | PGA0使能  0x0:不使能  0x1:使能                                       |
|-----------------------------------------------------------------------------------------|
******************************************************************************************/
// AMP_CON11
#define _AMP_CON11
#define AMP_PGA2_EN(n)             ((n) << 2)  // PGA2使能  0x0:不使能  0x1:使能
#define AMP_PGA1_EN(n)             ((n) << 1)  // PGA1使能  0x0:不使能  0x1:使能
#define AMP_PGA0_EN(n)             ((n) << 0)  // PGA0使能  0x0:不使能  0x1:使能



/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/
/* Private function prototypes -----------------------------------------------*/
/* Private functions ---------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

#endif // __AMP_H__

/**
  * @}
  */

/**
  * @}
  */

/*************************** (C) COPYRIGHT 2021 HUGE-IC ***** END OF FILE *****/
