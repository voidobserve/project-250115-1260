C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2025 15:16:21 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Release\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C) INCDI
                    -R(..\..\Libraries\Include;..\..\User) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\main.lst) OBJECT(.\Release
                    -\Objects\main.obj)

line level    source

   1           
   2          
   3          #include "include.h"
   4          #include <stdio.h>
   5          #include "main.h"
   6          #include <math.h>
   7          /** @addtogroup Template_Project
   8            * @{
   9            */ 
  10             
  11          /* Private typedef -----------------------------------------------------------*/
  12          /* Private define ------------------------------------------------------------*/
  13          /* Private macro -------------------------------------------------------------*/
  14          /* Private variables ---------------------------------------------------------*/
  15          
  16          LED_S led_state;
  17          /* Private function prototypes -----------------------------------------------*/
  18          /* Private functions ---------------------------------------------------------*/
  19          
  20          /*********************************
  21          |--------------------------------|
  22          | ‰ΩøÁî®%dÊâìÂç∞ÁöÑÊï∞ÂÄº‰∏çÂØπÊó∂ÔºåËØ∑Ê≥®ÊÑè |
  23          |--------------------------------|
  24          | Ê†ºÂºè |     Âê´‰πâ     | ÈíàÂØπÁ±ªÂûã |
  25          |------|--------------|----------|
  26          | %bd  | Âçï‰∏™Â≠óËäÇÂèòÈáè | char     |
  27          | % d  | ‰∏§‰∏™Â≠óËäÇÂèòÈáè | int      |
  28          | %ld  | Âõõ‰∏™Â≠óËäÇÂèòÈáè | long int |
  29          |--------------------------------|
  30          **********************************/
  31          // ÈáçÂÜôpuchar()ÂáΩÊï∞,Áî®‰∫éÊ†áÂáÜprintf()ÂáΩÊï∞ (Ê≥®ÊÑè:‰ΩøÁî®printf()ÂáΩÊï∞Âç†Áî®1kÂ∑¶Âè≥ÁöÑcodeÁ©∫Èó¥
             -)
  32          char putchar(char c)
  33          {
  34   1          debug_putchar(c);
  35   1      
  36   1          return c;
  37   1      }
  38          
  39          
  40           
  41          /**
  42            * @brief  Main program.
  43            * @param  None
  44            * @retval None
  45            */
  46          extern void timer4_cap_init(void);
  47          extern void timer0_init();
  48          extern void get_duty(void);
  49          extern void pwm_init(void);
  50          extern void option_fun(void); 
  51          extern void init_lvd_4V(void);
  52          extern void init_lvd_3v(void);
C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2025 15:16:21 PAGE 2   

  53          
  54          extern void lvd_handler(void);
  55          extern void adc_init();
  56          extern void adc_val();
  57          extern u16 ntc_val;
  58          extern u16 adjust_val;
  59          extern u16 ajust_duty;
  60          extern u16 adc0_val;
  61          extern u16 adc1_val;
  62          extern void adjust_pwm();
  63          extern u16 max_duty;
  64          extern u32 pwm_in_duty;
  65          extern bit dly_pwr_on ;
  66          extern u8 simple_over;
  67          extern u16 max_duty;
  68          
  69           
  70          void main(void) 
  71          {
  72   1              
  73   1              system_init();
  74   1        
  75   1      
  76   1                      
  77   1      //  P1_MD1   &= ~GPIO_P15_MODE_SEL(0x03);
  78   1      //  P1_MD1   |=  GPIO_P15_MODE_SEL(0x01);
  79   1      //      P1_PU |= GPIO_P15_PULL_UP(1);
  80   1      //      P15 = 1;
  81   1      
  82   1      //  P1_MD1   &= ~GPIO_P16_MODE_SEL(0x03);
  83   1      //  P1_MD1   |=  GPIO_P16_MODE_SEL(0x01);
  84   1      //      P1_PU |= GPIO_P16_PULL_UP(1);
  85   1      //  P16 = 1;
  86   1      //              while(1) 
  87   1      //    {
  88   1      //      WDT_KEY = WDT_KEY_VAL(0xAA);        // ÂñÇÁãóÂπ∂Ê∏ÖÈô§ wdt_pending
  89   1      //              }
  90   1      
  91   1      //      delay_ms(5);
  92   1              #if 1
  93   1          // ÁúãÈó®ÁãóÈªòËÆ§ÊâìÂºÄ, Â§ç‰ΩçÊó∂Èó¥2s 
  94   1          //    WDT_KEY = WDT_KEY_VAL(0xDD);               //  ÂÖ≥Èó≠ÁúãÈó®Áãó (Â¶ÇÈúÄÈÖçÁΩÆÁúãÈó®ÁãóËØ∑Êü•Áúã‚Ä
             -úWDT\WDT_Reset‚ÄùÁ§∫‰æã)
  95   1          led_state = LED_PWR_ON;
  96   1          
  97   1          delay_ms(10);
  98   1          // ÂàùÂßãÂåñÊâìÂç∞
  99   1          debug_init();
 100   1          user_printf("TX8C126x_SDK main start\n");
 101   1          timer4_cap_init();
 102   1              
 103   1          __SetIRQnIP(TMR4_IRQn, TMR4_IQn_CFG);  
 104   1                      __SetIRQnIP(STMR0_IRQn, STMR0_IQn_CFG);  
 105   1                      
 106   1          timer0_init();
 107   1          pwm_init();
 108   1          adc_init();
 109   1                      adc_val();//ÂàùÂßãÂåñÊó∂ËøêË°å‰∏ÄÊ¨°ÔºåÁî®‰∫éÊ†áÂøó‰ΩçÂà§Êñ≠
 110   1          option_fun(); 
 111   1                       printf("adc0_val = %d  adc1_val = %d \r\n ", adc0_val,adc1_val);                 
 112   1          init_lvd_3v(); 
 113   1          while(1) 
C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2025 15:16:21 PAGE 3   

 114   1          {
 115   2            WDT_KEY = WDT_KEY_VAL(0xAA);        // ÂñÇÁãóÂπ∂Ê∏ÖÈô§ wdt_pending
 116   2            get_duty(); 
 117   2            lvd_handler();
 118   2                              //adc_val();//adcÂÄº
 119   2                              adjust_pwm();//Áîµ‰ΩçÂô®ÂÄº
 120   2                              //dly_pwr_on =1;
 121   2                                      
 122   2          }
 123   1                      #endif
 124   1      }
 125          
 126          /**
 127            * @}
 128            */
 129          
 130          /*************************** (C) COPYRIGHT 2021 HUGE-IC ***** END OF FILE *****/
 131          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    132    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =      1       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
