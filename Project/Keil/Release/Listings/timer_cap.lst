C51 COMPILER V9.60.7.0   TIMER_CAP                                                         11/20/2024 14:32:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER_CAP
OBJECT MODULE PLACED IN .\Release\Objects\timer_cap.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\timer_cap.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C) 
                    -INCDIR(..\..\Libraries\Include;..\..\User) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\timer_cap.lst) OBJECT
                    -(.\Release\Objects\timer_cap.obj)

line level    source

   1          #include "include.h"
   2          
   3          
   4          u16 cap0_val = 0;   
   5          u16 cap1_val = 0;       //  捕获源的占空比=(cap1_val+1)/(cap0_val+1)*100%
   6          
   7          void timer4_cap_init(void)
   8          {
   9   1          // 配置P14输入模式，CAP0_PIN--P14
  10   1          P1_MD1 &= ~GPIO_P14_MODE_SEL(0x03);
  11   1          FIN_S4  =  GPIO_FIN_SEL_P14;                            // tmr4_cap0_pin 输入功能pin脚选择P00
  12   1      
  13   1          // TIMER4配置捕获功能
  14   1          __EnableIRQ(TMR4_IRQn);                                 // 打开TIMER4模块中断
  15   1          TMR_ALLCON = TMR4_CNT_CLR(0x1);                         // Timer4 计数清零
  16   1          TMR4_CAP10 = TMR4_PRD_VAL_L(0xFF);                      // 周期低八位寄存器
  17   1          TMR4_CAP11 = TMR4_PRD_VAL_H(0xFF);                      // 周期高八位寄存器
  18   1          TMR4_CON0  = TMR4_PRESCALE_SEL(0x7) |                   // 128分频
  19   1                       TMR4_SOURCE_SEL(0x7)   |                   // 计数源选择系统时钟
  20   1                       TMR4_MODE_SEL(0x2);                        // 捕获模式
  21   1          TMR4_CON1  = TMR4_CAP_SRC_SEL(0x0) |                    // 捕获信号源选择GPIO,CAP = CAP0_PIN
  22   1                       TMR4_SYNC_OUT_SEL(0x0);                    // 同步输出信号选择计数等于周期
  23   1          TMR4_CON2  = TMR4_CAP0_POL(0x0) |                       // 1级捕获上升沿
  24   1                       TMR4_CAP1_POL(0x1) |                       // 2级捕获下升沿
  25   1                       TMR4_CTRRST0_EN(0x1);                      // 1级捕获信号有效时,计数复位
  26   1          TMR4_CON3  = TMR4_CAP_CLASS(0x1);                       // 捕获有效级数2级
  27   1          TMR4_IE0   = TMR4_CAP0_IRQ_EN(0x1) |                    // 使能1级捕获信号有效中断
  28   1                       TMR4_CAP1_IRQ_EN(0x1);                     // 使能2级捕获信号有效中断
  29   1          TMR4_EN    = TMR4_EN(0x1);                              // 使能定时器
  30   1          IE_EA = 1;                                              // 使能总中断 
  31   1      }
  32          
  33          void TMR4_IRQHandler(void) interrupt TMR4_IRQn
  34          {
  35   1          // 进入中断设置IP，不可删除
  36   1          __IRQnIPnPush(TMR4_IRQn);
  37   1          
  38   1          // ---------------- 用户函数处理 -------------------
  39   1          // 2级捕获中断
  40   1          if(TMR4_FLAG0 & TMR4_CAP1_FLAG(0x1)) {
  41   2              TMR4_CLR0 |= TMR4_CAP1_FLAG(0x1);
  42   2              
  43   2              cap1_val = (TMR4_CAP21 << 8) | TMR4_CAP20;
  44   2          }
  45   1          // 1级捕获中断
  46   1          if(TMR4_FLAG0 & TMR4_CAP0_FLAG(0x1)) {
  47   2              TMR4_CLR0 |= TMR4_CAP0_FLAG(0x1);
  48   2              
  49   2              cap0_val = (TMR4_CAP11 << 8) | TMR4_CAP10;
  50   2          }
  51   1          
  52   1          // 退出中断设置IP，不可删除
  53   1          __IRQnIPnPop(TMR4_IRQn);
C51 COMPILER V9.60.7.0   TIMER_CAP                                                         11/20/2024 14:32:27 PAGE 2   

  54   1      }
  55          
  56          
  57          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    119    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
