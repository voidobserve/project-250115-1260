C51 COMPILER V9.60.7.0   ADC                                                               11/20/2024 14:32:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Release\Objects\adc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\adc.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C) INCDIR
                    -(..\..\Libraries\Include;..\..\User) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\adc.lst) OBJECT(.\Release\O
                    -bjects\adc.obj)

line level    source

   1          #include "include.h"
   2          #include "main.h"
   3          u16 ntc_val;
   4          u16 adjust_val;
   5          u16 ntc_val_all;
   6          u16 adjust_val_all;
   7          u8 adc_cnt=0;
   8          u8 loop_cnt=0;
   9          u16 adc0_val;
  10          u16 adc1_val;
  11          //    P1_MD0 &=  ~(GPIO_P13_MODE_SEL(0x3));
  12          //    P1_PU |=  (GPIO_P13_PULL_UP(0x1));
  13          //    P1_PD |=    (GPIO_P13_PULL_PD(1));
  14          void adc_init()
  15          {
  16   1                  // ÅäÖÃP27 p30ÎªÄ£ÄâÊäÈëÄ£Ê½ ²¢ÇÒÉÏÀ­
  17   1          P2_MD0   |= GPIO_P27_MODE_SEL(0x3);                       // P27ÉèÎªÄ£ÄâÄ£Ê½  PIN9
  18   1          P3_MD0   |= GPIO_P30_MODE_SEL(0x3);                       // P30ÉèÎªÄ£ÄâÄ£Ê½  PIN8
  19   1                P2_PU |= (GPIO_P27_PULL_UP(0x1));                         // P27Ê¹ÄÜÉÏÀ­      PIN9  ÓÃÓÚ³õÊ¼»¯ÅÐ¶ÏÊÇ·ñ½
             -ÓÈëntc                 
  20   1          P2_PD |= (GPIO_P27_PULL_PD(0x0));                         // P27¹Ø±ÕÏÂÀ­
  21   1                P3_PU |= (GPIO_P30_PULL_UP(0x1));                         // P30Ê¹ÄÜÉÏÀ­      PIN8  ÓÃÓÚ³õÊ¼»¯ÅÐ¶ÏÊÇ·ñ½
             -ÓÈëµçÎ»Æ÷
  22   1          P3_PD |= (GPIO_P30_PULL_PD(0x0));                         // P30¹Ø±ÕÏÂÀ­
  23   1          //ADCÅäÖÃ
  24   1          ADC_ACON1 &= ~(ADC_VREF_SEL(0x7) | ADC_EXREF_SEL(0x1));   // ¹Ø±ÕÍâ²¿²Î¿¼µçÑ¹
  25   1          ADC_ACON1 |= ADC_VREF_SEL(0x6) |                          // Ñ¡ÔñÄÚ²¿²Î¿¼µçÑ¹VCCA  5v
  26   1                       ADC_TEN_SEL(0x3);
  27   1          ADC_ACON0  = ADC_CMP_EN(0x1)  |                           // ´ò¿ªADCÖÐµÄCMPÊ¹ÄÜÐÅºÅ
  28   1                       ADC_BIAS_EN(0x1) |                           // ´ò¿ªADCÆ«ÖÃµçÁ÷ÄÜÊ¹ÐÅºÅ
  29   1                       ADC_BIAS_SEL(0x1);
  30   1              
  31   1          ADC_CHS0   = ADC_ANALOG_CHAN(0x17) |                      // P27Í¨Â·
  32   1                       ADC_EXT_SEL(0x0);                            // Ñ¡ÔñÍâ²¿Í¨Â·
  33   1          ADC_CFG0  |= ADC_CHAN0_EN(0x1) |                          // Ê¹ÄÜÍ¨µÀ0×ª»»
  34   1                       ADC_EN(0x1);                                 // Ê¹ÄÜA/D×ª»»
  35   1              
  36   1          ADC_CHS1   = ADC_ANALOG_CHAN(0x18) |                      // P30Í¨Â·
  37   1                       ADC_EXT_SEL(0x0);                            // Ñ¡ÔñÍâ²¿Í¨Â·
  38   1          ADC_CFG0  |= ADC_CHAN1_EN(0x1) |                          // Ê¹ÄÜÍ¨µÀ1×ª»»
  39   1                       ADC_EN(0x1);                                 // Ê¹ÄÜA/D×ª»»
  40   1              
  41   1                delay_ms(1);                                              // µÈ´ýADCÄ£¿éÅäÖÃÎÈ¶¨£¬ÐèÒªµÈ´ý20usÒÔÉÏ
  42   1      }
  43          
  44          void adc_val()
  45          {
  46   1                    ADC_CFG0 |= ADC_CHAN0_TRG(0x1);                       // ´¥·¢ADC0×ª»»
  47   1              while(!(ADC_STA & ADC_CHAN0_DONE(0x1)));              // µÈ´ý×ª»»Íê³É
  48   1              ADC_STA  = ADC_CHAN0_DONE(0x1);                       // Çå³ýADC0×ª»»Íê³É±êÖ¾Î»
  49   1              adc0_val = (ADC_DATAH0 << 4) | (ADC_DATAL0 >> 4);     // ¶ÁÈ¡channel0µÄÖµ
  50   1                    
  51   1                    
C51 COMPILER V9.60.7.0   ADC                                                               11/20/2024 14:32:27 PAGE 2   

  52   1              ADC_CFG0 |= ADC_CHAN1_TRG(0x1);                       // ´¥·¢ADC0×ª»»
  53   1              while(!(ADC_STA & ADC_CHAN1_DONE(0x1)));              // µÈ´ý×ª»»Íê³É
  54   1              ADC_STA  = ADC_CHAN1_DONE(0x1);                       // Çå³ýADC0×ª»»Íê³É±êÖ¾Î»
  55   1                                adc1_val = (ADC_DATAH1 << 4) | (ADC_DATAL1 >> 4);     // ¶ÁÈ¡channel1µÄÖµ
  56   1      
  57   1                    ntc_val_all+=adc0_val;                        
  58   1                    adjust_val_all+=adc1_val;
  59   1                   
  60   1               
  61   1                    adc_cnt++;
  62   1              if(adc_cnt==10)//¾ùÖµÂË²¨
  63   1                                      {
  64   2                                              ntc_val = ntc_val_all/10;
  65   2                                        adjust_val=adjust_val_all/10;
  66   2                                              adc_cnt=0;
  67   2                                              ntc_val_all=0;
  68   2                                              adjust_val_all=0;
  69   2      
  70   2                                      }
  71   1                                      
  72   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
